###################################################################################################
# This is a version of the docker-compose-prod.yml file for testing the production set-up locally #
###################################################################################################

version: '3'
services:
  mongo:
    container_name: cc-mongo
    image: mongo
    networks:
      - cubingcontests
    ports:
      - 127.0.0.1:27017:27017
    volumes:
      - cubingcontests-db:/data/db:rw
      # The scripts in docker-entrypoint-initdb.d are run when the container and volume are first created
      - mongo-init:/docker-entrypoint-initdb.d:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ADMIN_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ADMIN_PASSWORD
      - MONGO_DEV_USERNAME=$MONGO_DEV_USERNAME
      - MONGO_DEV_PASSWORD=$MONGO_DEV_PASSWORD
    restart: unless-stopped

  mongo-express:
    container_name: cc-mongo-express
    image: mongo-express
    networks:
      - cubingcontests
    ports:
      - 127.0.0.1:8080:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=cc-mongo
      - ME_CONFIG_MONGODB_AUTH_USERNAME=$MONGO_ADMIN_USERNAME
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=$MONGO_ADMIN_PASSWORD
    depends_on:
      - mongo
    restart: unless-stopped

  api:
    container_name: cc-api
    image: cubingcontests-api
    networks:
      - cubingcontests
    env_file: .env
    ports:
      - 127.0.0.1:5000:5000
    environment:
      - NODE_ENV=$NODE_ENV
      - PORT=$BACKEND_PORT
      - MONGODB_URI=mongodb://$MONGO_DEV_USERNAME:$MONGO_DEV_PASSWORD@cc-mongo:27017/cubingcontests
      - JWT_SECRET=$JWT_SECRET
      - BASE_URL=$BASE_URL
    depends_on:
      - mongo
    restart: unless-stopped

  client:
    container_name: cc-client
    image: cubingcontests-client
    networks:
      - cubingcontests
    ports:
      - 127.0.0.1:3000:3000
    environment:
      - ENVIRONMENT=$NODE_ENV
    depends_on:
      - mongo
      - api
    restart: unless-stopped

  dms:
    container_name: cc-dms
    image: mailserver/docker-mailserver
    networks:
      - cubingcontests
    hostname: $MAIL_URL
    env_file:
      - .env
      - mailserver.env
    ports:
      - '25:25'
      - '465:465'
      - '587:587'
    # ONLY USE THESE IN A REAL PRODUCTION ENVIRONMENT
    #environment:
    #  - POSTMASTER_ADDRESS=$ADMIN_EMAIL
    #  - SSL_TYPE=letsencrypt
    #  - LETSENCRYPT_HOST=$MAIL_URL
    #  - ENABLE_MTA_STS=1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./docker-data/dms/mail-data/:/var/mail/
      - ./docker-data/dms/mail-state/:/var/mail-state/
      - ./docker-data/dms/mail-logs/:/var/log/mail/
      - ./docker-data/dms/config/:/tmp/docker-mailserver/
      # ONLY USE THIS IN A REAL PRODUCTION ENVIRONMENT
      #- /etc/letsencrypt/live/:/etc/letsencrypt/live/:ro
    restart: unless-stopped
    stop_grace_period: 1m
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0

networks:
  cubingcontests:
volumes:
  cubingcontests-db:
    driver: local
  mongo-init:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./mongo_init
